[gd_scene load_steps=8 format=2]

[ext_resource path="res://DetectorRendering/DetectorDraw.gd" type="Script" id=1]

[sub_resource type="Environment" id=2]
background_mode = 1

[sub_resource type="World" id=3]
resource_local_to_scene = true
environment = SubResource( 2 )

[sub_resource type="VisualShaderNodeColorFunc" id=9]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 1 ) ]

[sub_resource type="VisualShader" id=8]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// ColorFunc:2
	vec3 n_in2p0 = vec3(0.00000, 0.00000, 1.00000);
	vec3 n_out2p0;
	{
		vec3 c = n_in2p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out2p0 = vec3(max2, max2, max2);
	}

// Output:0
	COLOR.rgb = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -592.248, -54.8519 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 500, 180 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( -20, 160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 8 )

[sub_resource type="ImageTexture" id=10]
flags = 0
lossy_quality = 0.0
flags = 0
size = Vector2( 1024, 600 )

[node name="Viewport" type="Viewport"]
size = Vector2( 1024, 600 )
own_world = true
world = SubResource( 3 )
hdr = false
usage = 0

[node name="BackgroundRender" type="Sprite" parent="."]
material = SubResource( 6 )
texture = SubResource( 10 )
centered = false

[node name="DetectorRender" type="Sprite" parent="."]
script = ExtResource( 1 )
